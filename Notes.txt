ITERATIONS
All iterations start with design notes/drawings and rspec TDD test writing unless otherwise specified or context makes it unapplicable.

*i*
mock ui
    *i*
    key shortcuts
        *i*
        When I change which thing is highlighted via jk, the focus should go out of the
        previous primary panel input
            *i*
            keep a variable that keeps track of which element is focused
                *i*
                all code having to do with focusing, tabout, etc, should return or some
                how keep the above variable up to date
            *i*
            make an unfocus method that takes the variable as an input
            it returns null
            focused_element = unfocus_element focused_element
        *i*
        after I go out of the modal, the focus should go back to the first input of
        the primary bucket item
        *i*
        delete button and hotkey
            *i*
            appropriate tab/alt-tab behavior for modal
            *i*
            modal displays type of bucket item and its description
            *i*
            delete primary panel
                *i*
                console.log if the user chooses to delete
                *i*
                figure out if I need to loop through every panel to remove one
                I might want to remove numbered ids if they're not needed or
                alternatives can be used
                *i*
                delete the primary panel and make the top primary
    *i*
    alt-i gives focus back to bucket menu if that is open, "on second thought..."
    button is modal is visible, or first input of primary bucket if it is open. In that order.
    *i*
    manually test click-ui and hotkeys thoroughly to make sure it works the way you want it to
    Be sure to also look for console errors as you are now throwing them
    *i*
    Mess around with non-mock css to make the site usable and then merge branch to
    trunk and push to heroku

*i*
make ui actually functional, plug view into appropriate controllers, etc.
changes models to match mock ui design
also might make changes to ui as I bring it in
be sure to write tests before you add something
more tests
    probably all: view, controller, model
what about authentication and ajax calls?

*i*
start using this thing and make notes about it with it.
but make regular backups of database dumps

*i*
adding a habit is a specialized thing
the app helps you monitor how well you are adopting a habit and helps you measure when you have finished adopting it so you can put it in done. But it also monitors the habit to see if you slack off and puts, get back into the habit in your waiting or ready or some other bucket.

*i*
allow stuff in the waiting bucket to connect to other bucket items

*i*
What bootstrap, gnu and other license information needs to be displayed on the site and where?
Also, where do I link to source code?

*i*
categories of stuff and people

*i*
users can create their own buckets

*i*
users can share people, tasks, etc.

*i*
make a page with hotkey instructions

*i*
what about other static pages like contact and about?

*i*
What else needs to be done to make it usable?

*i*
see what you can do to make the ui look nicer, the nav bar needs work
make the colors nicer
draw an actual splorf

*i*
bootstrapify all ui, I think a lot of the forms and things don't use bootstrap forms
There's probably lots of stuff like that

*i*
move these notes and others to the github wiki
There are nested task lists
https://github.com/blog/1841-nested-task-lists
This might be a better thing to do than your Notes.txt

*i*
change heroku name to splorf_coach
try to get a few people to use the app

*i*
stopwatch

*i*
Timer and stopwatch, hard-coded pomodoro schedule

*i*
user created work schedules

*i*
calendar and sync with calendar
probably a jquery ui widget

*i*
users connect to their people listings if they want
So my listing of my wife will actually be connected to their user account in some way.

*i*
scaloid android app connects to this app via rest api
after it's done, make sure any new fix/feature/whatever is done on both the web and mobile app at roughly the same time.

**next?**
*look through this list and do the highest priority thing first*
When you're in People, you've hightlighed but not opened a bucket item, and you hit enter, the app
waits for a few milliseconds and then moves your cursor from the second input to the first. This
is a hack, fix it.
I might just want to make the code better and more event driven. That might make this go away.

inputs with tab shiftab behavior should be wrapped in a div, give the div the appropriate attribute and the javascript will do the rest

I'm not detecting bootstrap events properly. Instead I'm looking at added classes and whatnot.

The ui js is not the best code. Improve it.

learn security and make this thing as secure as you can.

the way panel tab-index should really work is that each thing should have tab and shift-tab
attributes that then plugs in the apprpriate behavior

re-read javascript the good parts and implement it's advice
do the same for rails-javascript in railsguides

What about shift-tab for controls?

undo/redo for deleting items, N and P, dragging items, editing fields

if you're in New Stuff and you hit a plus for habit or thing, the list should not refresh

Is the database designed in an optimal way?
review database optimization

what about graceful degradation?

Can I write rspec tests for different window sizes to test responsive views?

I don't like how plus button stays active after a bucket item is created

should panel heading description update as you type?

fix spacing between items
http://jqueryui.com/sortable/

stars for importance, all starred stuff automatically is put at top

Maybe have a dropdown button in the nav instead of a dropdown?

The navbar doesn't look that great. Really just alignment issues. bucket dropdown is weird too.

how do I indicate that bucket item order indicates priority? Do I need to?

make the ui look really really good, test in all computer and mobile browsers you can

what if the browser can't load svg?

is this line necessary in config/application.rb
config.assets.precompile += %w(*.png *.jpg *.jpeg *.gif)

Did I need to put the sprockets gem in my Gemfile? is it already there by default?

also make sure the has_many and belongs_to relationships are reflected in the database?

Can I also do rspec tests for the database?

I just don't understand how to test policy scope this way:
https://github.com/elabs/pundit/issues/123
For now I'm testing this in the controller specs

https://github.com/plataformatec/devise/wiki/How-To:-Allow-users-to-edit-their-password

Is there any other testing I ought to be doing?
https://github.com/elabs/pundit
describe "users/show" do
  before(:each) do
    user = assign(:user, build_stubbed(:user))
    controller.stub(:current_user).and_return user
  end

  it "renders the destroy action" do
    allow(view).to receive(:policy).and_return double(edit?: false, destroy?: true)

    render
    expect(rendered).to match 'Destroy'
  end
end

make contact form for 
http://localhost:3000/static_pages/contact

What do I put in help?
http://localhost:3000/static_pages/help

Do I want to bother making a superclass for the person and thing controllers?
https://railsforum.com/topic/1985-drying-up-my-controllers/

Right now, if you're not authorized to see or edit something, you get redirected to the index. Can the user get redirected to whatever previous page they were on?

sync with twitter, facebook, diaspora, tumblr, wordpress and others

integrates with email?
    I'd love to have an empty inbox

write a script for refactoring or find one
    https://railsforum.com/topic/1967-changing-the-column-name-without-having-to-modify-a-bunch-of-other-code/#entry3877
    https://www.google.com/search?client=ubuntu&channel=fs&q=rails+refactor+script&ie=utf-8&oe=utf-8
    post to this forum and maybe make blog post about it.
    use drying_up_controllers_etc, you'll need to pull from master to it though.

somehow anonymize user data?

What data do I collect? What are the opt-in-out policies? What is fair? It seems like machine learning could be helpful to users.

do I want to make the user lockable?

track distractions and allow userdefined stats and tracking.

home redirects to a url with static_pages/home, how can I just have it be on the main url?

currently using railsgirls bootstrap css stuff. Use your own. Either use http://www.railstutorial.org/ or some other resource to learn how. There is a bootstrap gem.

add the ability to do video, audio, pictures for things/people

What about pre-release servers on which to test things?

learn how to make vim do html.erb indentation correctly, and fix all files' indentation.
    currently indents by 4, want to indent by 2

look for rails code style guides.

Do I want version numbers in my Gemfile?

read books in more detail:
    kanban
    gtd
    pom
    getting results the agile way
    willpower

research productivity/time-management etc.

QUESTIONS
Do I need uml for rails development?

Do I need to do this?
(not sure what it's for, testing?)
class ApplicationController < ActionController::Base
  after_action :verify_authorized, :except => :index
end
https://github.com/elabs/pundit

DESIGN
*current design*
Thing
    name:string
    description:text
    status:string

Person
    first_name:string
    last_name:string
    description:text

**old story**
Enter in your things and people (pets are people too)
    enter in all the things you need to do into "things you need to do"
    enter in all the things you want to do into "things you want to do"
    enter in loved ones, aquaintainces, co-workers, add things like bowling buddies
        Loved ones are the most important right now.
    If any of the things you want to or need to do involve people in your life, add them as well.
Pick 5 of what you think the highest priority things are
    Rephrase that thing so you know what the outcome is. What does "done" look like?
    Are they associated with any people? Associate them. Create those people if you haven't yet.
    What other things need to be done, have to happen, for this thing to be done? Put those things in this thing, you may either search for them or create them.
For each thing within each 5 things, look at them, what needs to be done for it? Keep going. Add stuff to calendars. here too.
Then the system looks at the first things that need to be done. These are the tasks that are ready to be done. The stuff that's waiting for this stuff is in the waiting section.
Have the user pick 3 things from the ready section, and then have them estimate how long each of the three things will take.
Now ask them if they'd like to work on it now and if they'd like to time it. Suggest a work/break schedule based on pomodoro. 
Do the thing, if they time things, time it. Work break schedule isn't assigned to any task, and there are multiple schedles (pomodoro, an hour for just working out, 15-3, etc). There's the stopwatch and the timer. There's always the option to keep going for another block or just keep going indefinitely.
keep stats of all this.
Have the person mark a task as done when it's done.
What about estimation, review etc? Will have to think about it.
Do the next thing. Always give them the option to add more things to the new-stuff bucket, take stuff from the new-bucket to waiting, trash, or reference, modify waiting.
There should be a hard limit to the number of things in waiting and ready? There should definitely be a hard limit to the number of wip's. But these should be adjustable?
